/* slow v1.0.1
   github.com/spencermountain/slow
   MIT
*/

!function(n){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=n();else if("function"==typeof define&&define.amd)define([],n);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).slow=n()}}(function(){return function(){return function n(e,r,t){function o(u,f){if(!r[u]){if(!e[u]){var c="function"==typeof require&&require;if(!f&&c)return c(u,!0);if(i)return i(u,!0);var l=new Error("Cannot find module '"+u+"'");throw l.code="MODULE_NOT_FOUND",l}var s=r[u]={exports:{}};e[u][0].call(s.exports,function(n){return o(e[u][1][n]||n)},s,s.exports,n,e,r,t)}return r[u].exports}for(var i="function"==typeof require&&require,u=0;u<t.length;u++)o(t[u]);return o}}()({1:[function(n,e,r){"use strict";var t=n("./rate-limit"),o={crawl:function(n,e){return t(n,e,3)},walk:function(n,e){return t(n,e,5)},run:function(n,e){return t(n,e,10)},sprint:function(n,e){return t(n,e,15)}};e.exports=o},{"./rate-limit":2}],2:[function(n,e,r){"use strict";e.exports=function(n,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5;return new Promise(function(t,o){if(n&&e)if(0!==n.length)for(var i=[],u=r-1,f=0,c=function r(c){f+=1;var l=e(n[c]);l.then?(l.then(function(n){i[c]=n}),l.catch(function(n){console.error(n),i[c]=null}),l.finally(function(){f-=1,u+=1,n.length>=u+1?r(u):f<=0&&t(i)})):o("Error: function must return a promise")},l=n.length<r?n.length:r,s=0;s<l;s+=1)c(s);else t([]);else o("Error: missing required parameters to rate-limit function")})}},{}]},{},[1])(1)});
