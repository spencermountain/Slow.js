/* slow v1.0.0
   github.com/spencermountain/slow
   MIT
*/

!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).slow=e()}}(function(){return function(){return function e(n,r,t){function o(u,f){if(!r[u]){if(!n[u]){var a="function"==typeof require&&require;if(!f&&a)return a(u,!0);if(i)return i(u,!0);var c=new Error("Cannot find module '"+u+"'");throw c.code="MODULE_NOT_FOUND",c}var s=r[u]={exports:{}};n[u][0].call(s.exports,function(e){return o(n[u][1][e]||e)},s,s.exports,e,n,r,t)}return r[u].exports}for(var i="function"==typeof require&&require,u=0;u<t.length;u++)o(t[u]);return o}}()({1:[function(e,n,r){"use strict";function t(e,n,r,t,o,i,u){try{var f=e[i](u),a=f.value}catch(e){return void r(e)}f.done?n(a):Promise.resolve(a).then(t,o)}var o={walk:function(){var e,n=(e=regeneratorRuntime.mark(function e(n,r,t){var o,i,u,f,a,c,s,p;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:o=[],i=!0,u=!1,f=void 0,e.prev=4,a=n[Symbol.iterator]();case 6:if(i=(c=a.next()).done){e.next=15;break}return s=c.value,e.next=10,r(s);case 10:p=e.sent,o.push(p);case 12:i=!0,e.next=6;break;case 15:e.next=21;break;case 17:e.prev=17,e.t0=e.catch(4),u=!0,f=e.t0;case 21:e.prev=21,e.prev=22,i||null==a.return||a.return();case 24:if(e.prev=24,!u){e.next=27;break}throw f;case 27:return e.finish(24);case 28:return e.finish(21);case 29:case"end":return e.stop()}},e,null,[[4,17,21,29],[22,,24,28]])}),function(){var n=this,r=arguments;return new Promise(function(o,i){var u=e.apply(n,r);function f(e){t(u,o,i,f,a,"next",e)}function a(e){t(u,o,i,f,a,"throw",e)}f(void 0)})});return function(e,r,t){return n.apply(this,arguments)}}()};n.exports=o},{}]},{},[1])(1)});
